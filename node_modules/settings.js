var fs = require("fs");

function Settings()
{
	this.public_key = "";
	this.private_key = "";
	this.update_interval = 5000;
}

Settings.prototype.load = function (filename, callback) {
	var s = this;
	fs.readFile(filename, { encoding: "utf8", flag: "r" }, function (err, data) {
		if(err) {
			return callback(err);
		}

		var temp = JSON.parse(data);
		s.public_key = temp.public_key;
		s.private_key = temp.private_key;
		s.update_interval = temp.update_interval;

		callback(null);
	});
}

Settings.prototype.save = function (filename, callback) { 
	fs.writeFile(filename, JSON.stringify(this), { encoding: "utf8", mode: 438, flag: "w"}, function (err) {
		return callback(err);
	});
}

Settings.prototype.getPublicKey = function () {
	return this.public_key;
}

Settings.prototype.getPrivateKey = function() {
	return this.private_key;
}

Settings.prototype.setKeys = function (publicKey, privateKey) {
	this.public_key = publicKey;
	this.private_key = privateKey;
}

Settings.prototype.getUpdateInterval = function () {
	return this.update_interval;
}

module.exports.Settings = Settings;
